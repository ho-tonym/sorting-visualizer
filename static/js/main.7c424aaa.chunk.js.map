{"version":3,"sources":["MyProvider.js","components/SortVisualizer/Toolbar/slider/index.js","utils/index.js","algorithms/bubbleSort/index.js","algorithms/heapSort/index.js","algorithms/quickSort/index.js","algorithms/mergeSort/index.js","algorithms/animation/executeAnim.js","components/SortVisualizer/Toolbar/data/algorithms.js","algorithms/selectionSort/index.js","algorithms/insertionSort/index.js","components/SortVisualizer/Toolbar/index.js","hooks/useInterval.js","components/SortVisualizer/ArrayBars/index.js","components/SortVisualizer/SortVisualizer.jsx","components/SortVisualizer/index.js","App.js","serviceWorker.js","index.js"],"names":["MyContext","createContext","MyProvider","props","useState","array","animArray","isSorted","isRunning","comparedValues","state","setState","sliderValues","slider","setSlider","Provider","value","children","useStateValue","useContext","SliderContainer","className","defaultValue","onChange","min","max","resetArray","count","i","push","Math","floor","random","swap","j","k","tempElement","length","heapify","left","right","quickSort","arr","pivotIndex","pivot","pivotValue","partition","tempArray","arrayCopy","fromArr","fromPos","toArr","toPos","doAnim","executeAnim","pArray","bool","l","values","swapOrAssign","prevState","slice","algorithms","title","algo","mergeSortHelper","leftStart","rightEnd","middle","leftEnd","size","index","doMerge","stop","element","a","Toolbar","speed","handleResetArray","useEffect","callback","delay","savedCB","useRef","current","intervalId","setInterval","clearInterval","useInterval","ButtonToolbar","ButtonGroup","DropdownButton","as","id","map","e","Dropdown","Item","onClick","sortingAlgo","key","Button","variant","ArrayBars","width","isHeightChange","style","backgroundColor","height","SortVisualizer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c424aaa.chunk.js","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\n\nexport const MyContext = createContext();\nexport const MyProvider = (props) => {\n  const [state, setState] = useState({\n    array: [],\n    animArray: [],\n    isSorted: false,\n    isRunning: false,\n    comparedValues: [],\n  })\n\n  const [slider, setSlider] = useState({\n    sliderValues: 44,\n  })\n\n  return (\n    <MyContext.Provider\n      value={{\n        state,\n        setState,\n        slider,\n        setSlider\n      }}\n    >\n      {props.children}\n    </MyContext.Provider>\n  )\n}\n\nexport const useStateValue = () => useContext(MyContext)\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport { useStateValue } from '../../../../MyProvider'\nimport 'rc-slider/assets/index.css';\nimport './slider.min.css'\n\nexport const SliderContainer = () => {\n  const { slider, setSlider } = useStateValue()\n\n  function handleSliderChange(sliderValues) {\n    setSlider({ sliderValues });\n  }\n  const { sliderValues } = slider\n\n  return(\n    <div className=\"slider\">\n      <p>\n        Array Size  +  Speed\n      </p>\n      <Slider\n        defaultValue={sliderValues}\n        onChange={handleSliderChange}\n        min={10}\n        max={100}\n      />\n    </div>\n  )\n}\n","export function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function resetArray(count) {\n  const array = []\n  for (let i = 0; i < count; i++) {\n    array.push(randomInt(5, 400))\n  }\n  return array\n}\n\nexport const swap = (array, j, k) => {\n  const tempElement = array[j];\n\n  array[j] = array[k];\n  array[k] = tempElement;\n  return array\n}\n\nexport function arraysEqual(array1, array2) {\n  if (array1.length !== array2.length) return false;\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { swap } from \"../../utils\"\n\nexport const getBubbleSortAnim = (array) => {\n  const arr = [...array]\n  const animArray = []\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0, stop = arr.length - i; j < stop; j++) {\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        animArray.push([\n          j, j + 1, true,\n        ])\n      } else if(j + 1 === arr.length - i) {\n        // remove last one\n      } else {\n        animArray.push([\n          j, j + 1, false,\n        ])\n      }\n    }\n  }\n  return animArray\n}\n","import { swap } from \"../../utils\"\n\nlet length;\nlet animArray;\n\nfunction heapify(array, i) {\n  const left = 2 * i + 1;\n  const right = 2 * i + 2;\n  let max = i;\n\n  if (left < length && array[left] > array[max]) {\n    max = left;\n    animArray.push([\n      i, max, false,\n    ])\n  }\n\n  if (right < length && array[right] > array[max]) {\n    max = right;\n    animArray.push([\n      i, max, false,\n    ])\n  }\n\n  if (max !== i) {\n    swap(array, i, max);\n    animArray.push([\n      i, max, true,\n    ])\n    heapify(array, max);\n  } else{\n    animArray.push([\n      i, max, false,\n    ])\n  }\n}\n\nexport const getHeapSortAnim = (array) => {\n  const arr = [...array]\n  let a;\n  length = arr.length;\n  animArray = []\n\n  for (let i = Math.floor(length / 2); i >= 0; i -= 1) {\n    heapify(arr, i);\n  }\n\n  for (a = length - 1; a > 0; a--) {\n    swap(arr, 0, a);\n    animArray.push([0, a, true])\n    length--;\n\n    heapify(arr, 0);\n  }\n\n  return animArray\n}\n","import { swap } from \"../../utils\"\n\nlet animArray = []\nfunction partition(arr, pivot, left, right) {\n  const pivotValue = arr[pivot]\n  let pivotIndex = left\n\n  for (let i = left; i < right; i++) {\n    if (arr[i] < pivotValue) {\n      animArray.push([i, pivotIndex, true])\n      swap(arr, i, pivotIndex);\n      pivotIndex++;\n    } else{\n      animArray.push([i, pivotIndex, false])\n    }\n  }\n  swap(arr, right, pivotIndex);\n  animArray.push([right, pivotIndex, true])\n\n  return pivotIndex;\n}\n\n\nfunction quickSort(arr, left = 0, right = arr.length - 1) {\n  let pivot;\n  let pivotIndex;\n\n  if (left < right) {\n    pivot = right;\n    pivotIndex = partition(arr, pivot, left, right);\n\n    quickSort(arr, left, pivotIndex - 1);\n    quickSort(arr, pivotIndex + 1, right);\n  }\n  return arr;\n}\n\nexport function getQuickSortAnim(arr) {\n  const array = [...arr]\n  animArray = []\n  quickSort(array)\n  return animArray\n}\n","let tempArray = []\nlet animArray = []\n\nexport function getMergeSortAnim(arr) {\n  const length = arr.length\n  if (length <= 1) return arr;\n  tempArray = [...arr]\n  let array = [...arr]\n  animArray = []\n\n  mergeSortHelper(array, 0, length - 1)\n  return animArray\n}\n\nfunction mergeSortHelper(array, leftStart, rightEnd) {\n  if (leftStart === rightEnd) return\n  const middle = Math.floor((leftStart + rightEnd) / 2);\n\n  mergeSortHelper(array, leftStart, middle)\n  mergeSortHelper(array, middle + 1, rightEnd)\n  doMerge(array, leftStart, rightEnd)\n}\n\nfunction doMerge(array, leftStart, rightEnd) {\n  const leftEnd = Math.floor((rightEnd + leftStart) / 2);\n  const rightStart = leftEnd + 1\n  const size = rightEnd - leftStart + 1\n\n  let left = leftStart\n  let right = rightStart\n  let index = leftStart\n\n  while(left <= leftEnd && right <= rightEnd) {\n    animArray.push([left, right, false, 0])\n    if (array[left] <= array[right]) {\n      tempArray[index] = array[left]\n      // animArray.push([right, left, false, array[left]])\n      left++\n    } else {\n      tempArray[index] = array[right]\n      right++\n    }\n    index++\n  }\n\n  arrayCopy(array, left, tempArray, index, leftEnd - left + 1)\n  arrayCopy(array, right, tempArray, index, rightEnd - right + 1)\n  arrayCopy(tempArray, leftStart, array, leftStart, size, true)\n}\n\nfunction arrayCopy(fromArr, fromPos, toArr, toPos, length, doAnim) {\n  for (let i = 0; i < length; i++) {\n    toArr[toPos] = fromArr[fromPos]\n    if (doAnim) { animArray.push([fromPos, toPos, true, toArr[toPos]]) }\n    toPos++\n    fromPos++\n  }\n}\n","import { swap } from \"../../utils\"\n\nexport function swapOrAssign(arr, pArray, j, k, bool, l) {\n  if(bool) {\n    if(pArray[0].length !== 3) {\n      arr[j] = l\n    } else {\n      swap(arr, j, k)\n    }\n  }\n}\n\nexport const executeAnim = (setState, pArray, array) => {\n  const arr = [...array]\n  const [j, k, bool, l] = pArray[0]\n  const values = [j, k, bool]\n\n  swapOrAssign(arr, pArray, j, k, bool, l)\n\n  setState(prevState => ({ ...prevState,\n    array: arr,\n    animArray: prevState.animArray.slice(1),\n    comparedValues: values,\n\n  }))\n}\n","import {\n  getMergeSortAnim,\n  getQuickSortAnim,\n  getBubbleSortAnim,\n  getHeapSortAnim,\n  getSelectSortAnim,\n  getInsertSortAnim,\n} from \"../../../../algorithms\";\n\nexport const algorithms = [\n  { title: \"Merge Sort\", algo: getMergeSortAnim },\n  { title: \"Quick Sort\", algo: getQuickSortAnim },\n  { title: \"Bubble Sort\", algo: getBubbleSortAnim },\n  { title: \"Select Sort\", algo: getSelectSortAnim },\n  { title: \"Insert Sort\", algo: getInsertSortAnim },\n  { title: \"Heap Sort\", algo: getHeapSortAnim },\n]\n","import { swap } from \"../../utils\"\n\nexport const getSelectSortAnim = (array) => {\n  const arr = [...array]\n  const length = arr.length;\n  const animArray = []\n  for (let i = 0; i < length; i++) {\n    let min = i;\n    for (let j = i + 1; j < length; j++) {\n      if (arr[min] > arr[j]) {\n        min = j;\n        animArray.push([\n          j - 1, j, false,\n        ])\n      } else {\n        animArray.push([\n          min, j, false,\n        ])\n      }\n    }\n    if (min !== i) {\n      swap(arr, i, min)\n      animArray.push([\n        min, i, true,\n      ])\n    }\n  }\n  return animArray\n}\n","export const getInsertSortAnim = (array) => {\n  const arr = [...array]\n  const length = arr.length;\n  const animArray = []\n\n  for (let i = 0; i < length; i++) {\n    const element = arr[i];\n    let j;\n    animArray.push([\n      i, i + 1, false,\n    ])\n    for (j = i - 1; j >= 0 && arr[j] > element; j--) {\n      arr[j + 1] = arr[j];\n      animArray.push([\n        j + 1, j, true,\n      ])\n    }\n    arr[j + 1] = element;\n  }\n\n  return animArray\n};\n","import React, { useEffect } from 'react'\nimport './toolbar.min.css'\nimport {\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownButton,\n  ButtonToolbar,\n} from \"react-bootstrap\";\nimport { useStateValue } from \"../../../MyProvider\"\nimport { SliderContainer } from \"./slider\";\nimport { algorithms } from './data/algorithms'\nimport { executeAnim } from \"../../../algorithms\";\nimport { resetArray } from \"../../../utils\"\nimport useInterval from \"../../../hooks/useInterval\";\n\nfunction Toolbar() {\n  const { state, setState, slider } = useStateValue();\n  const { array, isRunning, animArray } = state\n  const { sliderValues } = slider;\n  const speed = 600 - (array.length / 2) ** 2 > 0\n    ? 600 - (array.length * 0.55) ** 2\n    : 0;\n\n  useEffect(() => {\n    handleResetArray(sliderValues)\n  }, [sliderValues])\n\n  useInterval(() => {\n    if (animArray.length > 0) {\n      executeAnim(setState, animArray, array)\n    } else {\n      setState(prevState => ({ ...prevState,\n        isRunning: false,\n        isSorted: true,\n        comparedValues: [],\n      }))\n    }\n  }, isRunning ? speed : null);\n\n  function handleResetArray(count) {\n    setState(prevState => ({\n      ...prevState,\n      array: resetArray(count),\n      isSorted: false,\n      isRunning: false,\n      comparedValues: [],\n    }))\n  }\n\n  function pauseResume() {\n    if (animArray.length > 0) {\n      setState(prevState => ({ ...prevState,\n        isRunning: !prevState.isRunning,\n      }))\n    }\n  }\n\n  function doSetState(sortingAlgo) {\n    setState(prevState => ({ ...prevState,\n      animArray: sortingAlgo(array),\n      isRunning: true,\n    }))\n  }\n\n  return (\n    <ButtonToolbar className=\"justify-content-between\">\n      <ButtonGroup>\n        <DropdownButton as={ButtonGroup} title=\"Pick a Sorting Algorithm\" id=\"bg-nested-dropdown\">\n          {algorithms.map(e => (\n            <Dropdown.Item\n              onClick={() => { doSetState(e.algo) }}\n              key={e.title}\n            >\n              {e.title}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n        <Button variant=\"primary\"\n          onClick={() => handleResetArray(sliderValues)}\n        >\n          Reset\n        </Button>\n        <Button variant=\"primary\" onClick={pauseResume}>\n          {animArray.length <= 0 || (animArray.length > 0\n              && isRunning) ? \"Pause\" : \"Resume\"}\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup>\n        <SliderContainer />\n      </ButtonGroup>\n    </ButtonToolbar>\n  )\n}\n\nexport default Toolbar\n","import { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCB = useRef();\n\n  useEffect(() => {\n    savedCB.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function executeCallback() {\n      savedCB.current();\n    }\n    if (delay !== null) {\n      const intervalId = setInterval(executeCallback, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n}\n","import \"./arrayBars.min.css\";\nimport React from 'react'\nimport { useStateValue } from \"../../../MyProvider\";\n\nfunction ArrayBars() {\n  const { state } = useStateValue();\n  const { array, comparedValues, isSorted } = state;\n  const width = Math.floor(1000 / (array.length * 2));\n\n  const [j, k, isHeightChange] = comparedValues || null\n\n  return (\n    <div className=\"array-bars\">\n      {array.length && array.map((value, id) => (\n        <div\n          key={id}\n          style={{\n            backgroundColor:\n            `${isSorted ? \"#ff6e8d\"\n              : isHeightChange && (id === j || id === k) ? \"#4d84fe\"\n                : id === j || id === k\n                  ? \"#ff9f38\" : \"#636363\"\n            }`,\n            height: `${value}px`,\n            width: `${width}px`,\n          }}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ArrayBars\n","import React from \"react\";\nimport Toolbar from './Toolbar'\nimport ArrayBars from './ArrayBars'\n\nfunction SortVisualizer() {\n  return (\n    <>\n      <ArrayBars />\n      <Toolbar />\n    </>\n  )\n}\n\nexport default SortVisualizer\n","import SortVisualizer from './SortVisualizer'\n\nexport default SortVisualizer\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import logo from './logo.svg';\nimport SortVisualizer from './components/SortVisualizer'\nimport { MyProvider } from './MyProvider'\nimport './App.min.css'\n\n\nfunction App() {\n  return (\n    <MyProvider>\n      <div className=\"App\">\n        <SortVisualizer />\n      </div>\n    </MyProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}